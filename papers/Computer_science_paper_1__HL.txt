


M15/4/COMSC/HP1/ENG/TZ0/XX
Computer science
Higher level
Paper 1
© International Baccalaureate Organization 201511 pages
2215 – 7011
Instructions to candidates
   Do not open this examination paper until instructed to do so.
   Section A: answer all questions.
   Section B: answer all questions.
   The maximum mark for this examination paper is [100 marks].
2 hours 10 minutes
Tuesday 19 May 2015 (afternoon)

– 2 –
Blank page
M15/4/COMSC/HP1/ENG/TZ0/XX

– 3 –
Turn over
Section A
Answer all questions.,

 Describe one way that software developers can ensure that the users are aware of any 
available updates for their products. [2],

 Construct a truth table for the following Boolean expression.
 (A or B) And (not C or B)                                                           [4],

 Outline one example of the use of a virtual private network (VPN).   [3],

 Trace the following algorithmic fragment for N = 6.  Show all working in a trace table.
  SUM = 0
  loop COUNT from 1 to (N div 2)
       if N mod COUNT = 0 then 
            SUM = SUM + COUNT
       end if
  end loop
  if SUM = N then 
       output "perfect" 
  else  
       output "not perfect"
  end if         
                                                                                                           [4],

 Use a selection sort to put the following set of numbers into order from highest to lowest.   
List the results after each pass.
   12     52     16     42     88     86 [3],

 Describe how a GPS system can identify the position of a person.    [3],

      Describe      one way that the operating system of a networked workstation hides the complexity 
of the network from the user.  [3]
M15/4/COMSC/HP1/ENG/TZ0/XX

– 4 –,

 Consider the following binary tree.
M
HP
TD
C
L
 (a)     State the order that the nodes will be listed using the postorder tree traversal. [1]
 (b)     The node H is deleted so that the postorder traversal of the remaining nodes is 
preserved from part (a).  Sketch the updated binary tree following this deletion. [2]
M15/4/COMSC/HP1/ENG/TZ0/XX

– 5 –
Turn over
Section B
Answer all questions.,

 An insurance company holds a large database of information about its customers, including 
the date of their next payment.
 Once a month the database is searched to compile the following lists:
•	list 1: customers whose next payment date will be within the next 30 days
•	list 2: customers whose payment date has passed by more than 14 days but  
less than, or equal to, 30 days
•	list 3: customers whose payment date has passed by more than 30 days.
	   Records	of	customers	who	are	in	list	3	are	flagged	for	deletion.
 (a)     Construct an algorithm to illustrate the monthly process described above. [6]
 After the lists have been compiled, the following messages are sent out to customers.
•	A reminder is sent to customers in list 1. 
•	A warning that payments are more than 14 days overdue is sent to customers in list 2.
•	A cancellation of contract is sent to customers in list 3.
 (b)     Explain how the lists could be used to merge the data from the database with a 
word processor to create these messages automatically for sending either by post  
or by email. [4]
 (c)     Outline the consequences of data loss to customers and to the company. [2]
 (d)     Describe one method that the company could use to prevent data loss. [3]
M15/4/COMSC/HP1/ENG/TZ0/XX

– 6 –,

 Six lawyers and one secretary work together in the same building and are connected via a 
LAN to a central server.  Each has their own workstation.
 (a)     Outline the concept of the Open Systems Interconnection (OSI) model in 
communication across a network. [3]
 (b)     Outline, with an example, the function of protocols. [3]
	   The	secretary	deals	with	booking	appointments	for	clients.		New	clients	are	given	the	first	
available	appointment	with	any	lawyer	and	returning	clients	are	given	the	first	available	
appointment with their usual lawyer.
 A new customized computer package is bought to deal with appointment making.
 (c)     Identify the data that needs to be input by the secretary when someone asks for  
an appointment.    [2]
 The data on appointments is held as one page for each day.
 (d)     Describe a suitable data structure to hold the data for one day. [3]
 (e)     Using the data structure you suggested in (d), outline the steps in a procedure to create 
an appointment for a client.  [5]
M15/4/COMSC/HP1/ENG/TZ0/XX

– 7 –
Turn over,

		 In	a	small	airport,	the	details	of	all	flights	due	to	arrive	on	a	particular	day	are	held	in	a	
collection, FLIGHTS.  Each object in the collection contains the following information:
                  ID:		unique	flight	number
                  PLACE: where the plane is coming from
                  DUE: the time it is scheduled to arrive
                  EXPECTED: the time it is expected to arrive (only if it is early or if it is delayed)
                  ARRIVED: the time of actual arrival.
 EXPECTED and ARRIVED are blank at the beginning of the day and the collection is sorted in 
order of DUE.
 A screen in the airport can display information on 20 planes at a time, which are held in a 
linked list.
 (a)     Describe the features of a linked list of 20 planes that have the above information. [3]
 All times are stored in the collection as the number of minutes since midnight.  However they 
are displayed on the screen in 24-hour format (for example, 10:58 is stored in the collection 
as 658).
 (b)     Construct an algorithm to convert the times held in the collection into hours and 
minutes needed for the 24-hour format displayed on the screen. [3]
 If a plane arrived more than 30 minutes ago it is removed from the linked list and the next 
one in the collection is added to the end of the list.
 (c)     With the aid of a diagram, explain how a plane which arrived more than 30 minutes ago 
could be removed from the linked list. [4]
 (d)     For the application described above, compare the use of a linked list with the use of a 
queue of objects.   [5]
M15/4/COMSC/HP1/ENG/TZ0/XX

– 8 –,

 In	a	town,	a	set	of	traffic	lights	control	access	from	a	small	road,	where	a	fire	station	is	
located,	to	a	main	road	that	has	heavy	traffic.		In	times	of	emergency,	many	vehicles	from	
the	fire	station	may	need	to	leave	the	station	at	the	same	time.		A	system	is	put	in	place	so	
that	when	a	fire	truck	on	the	small	road	approaches	the	main	road,	the	traffic	lights	switch	to	
green (Go) on the small road and to red (Stop) on the main road. 
Small road
Main road
Traffic	lights
Fire station
Fire truck
	   (a)	 Outline	the	role	of	sensors	and	a	microprocessor	in	controlling	the	traffic	lights	in	 
this way.        [4]
	   (b)	 Suggest	how	the	traffic	lights	can	be	changed	back	to	their	original	state	once	there	are	
no	more	fire	trucks	coming	from	the	small	road.	[3]
	   These	traffic	lights	are	controlled	by	embedded	systems	at	the	point	of	use.		It	is	proposed	
that	they	should	be	controlled	from	the	same	central	computer	as	all	the	other	traffic	lights	in	
the town.
 (c) Discuss the advantages and disadvantages	of	running	the	town’s	traffic	light	system	
on one central computer with multiple inputs and outputs. [5]
	   A	series	of	cameras	are	installed	at	each	of	the	town’s	traffic	lights.		These	cameras	are	
connected to the central computer.
	   (d)	 Discuss	the	social	implications	of	monitoring	traffic	in	this	way.	[3]
M15/4/COMSC/HP1/ENG/TZ0/XX

– 9 –
Turn over,
 Theo entered a maze (labyrinth) and tries to get to the centre.  As soon as he arrived at 
the	first	possibility	to	turn	right	or	left,	he	started	recording	each	move	on	his	phone	so	that	
he	could	find	his	way	back	to	the	start.		He	entered	the	moves	as	the	direction	he	turned	
followed by the number of steps taken before the next turn.  For example:
 R3 ,  L5 ,  L10 ,  R6 ,  ... ,  L4
 which indicates "TURN right, STEP 3", and then "TURN left, STEP 5" etc.
 An app on his phone stored the moves in a stack named STK, using 0 for “right” and 1 for “left”.
 The above moves were therefore stored as
0 ,  3 ,  1 ,  5 ,  1 ,  10 ,  0 ,  6 , ... ,  1 ,  4.
 (a)     Explain why a stack is a suitable structure to hold the data. [2]
 Theo was successful in reaching the centre of the maze and now has to get back to the start.
 (b)     Construct an algorithm, using appropriate stack access methods, to output the moves 
needed	to	return	from	the	centre	to	the	first	point	where	Theo	started	recording	his	
moves.  You can assume that he is facing the correct exit when he starts his return 
journey.                                    [5] 
 Another app on the phone gives Theo a visual representation of his path through a maze as 
a map.  This app makes use of a procedure MOVE(), which outputs the coordinates of Theo’s 
path	through	a	maze,	in	reference	to	the	point	S,	where	he	first	turned	right	or	left	and	which	
has coordinates (0, 0).
 The diagram shows, for a new maze, the map from point S given the following moves:
 R10 ,  L5 , ...
(10, 5)
(10, 0)
First turning point S (0, 0)
Enter maze
 The third move is R8.
 (c)     State the coordinates on the map after this third move. [1]
(This question continues on the following page)
M15/4/COMSC/HP1/ENG/TZ0/XX

– 10 –
(Question 13 continued)
 At each point, the direction in which Theo is facing is given by the variables N and E. 
	   Note	that	before	the	very	first	turn	is	made,	N = 1 and E = 0.
N = 1, E = 0
N = –1, E = 0
N = 0, E = –1                       N = 0, E = 1
 The following table shows part of the trace of MOVE() according to the TURN and STEP 
values:  R10 ,  L5 ,  R8 ,  R2 ,  L3 ,  R0.
 The last move, with a STEP value of 0, indicates that there are no more moves and that the 
stack is empty.
         (d)         Copy and complete the table by tracing the algorithm on the following page.   
Do not write solutions on this page. 
MoveCoordinatesDirection facing
TURN      STEP        X        Y        N        E
0010
01010001
1510510
08
02
13
00
(This question continues on the following page)
M15/4/COMSC/HP1/ENG/TZ0/XX

– 11 –
(Question 13 continued)
 X, Y = 0                        // Initial coordinates 
	        N	=	1,	E	=	0	 	    	            //	Direction	facing	at	first	turn
         output (X, Y, N, E)            // Outputs starting point to the table
         MOVE(X,Y,N,E)                   // Procedure to move on 
              input (TURN, STEP) 
	    		        loop	while	STEP	≠	0	       //	No	more	moves	when	STEP	=	0
                    if TURN = 0           // Right move
                         X = X + N*STEP
                         Y = Y - E*STEP
                         if N = 0
                                   N     =     -E
                                   E     =     0
                              else     
                                   E     =     N
                                   N     =     0
                              end     if
                         end     if
                    if TURN = 1           // Left move
                         X = X - N*STEP
                         Y = Y + E*STEP 
                              if     N     =     0
                                   N     =     E
                                   E     =     0
                              else     
                                   E     =     -N
                                   N     =     0
                              end     if
                         end     if     
                    output (X, Y, N, E)
                    MOVE(X, Y, N, E)
                    end     loop
           end  MOVE
                                     [6]
M15/4/COMSC/HP1/ENG/TZ0/XX