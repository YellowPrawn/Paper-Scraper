{"classification":"topic 5","question":"\n\n A car park has two barriers.  One barrier is at the entrance, where tickets are issued, and \none barrier is at the exit, where paid tickets are checked when cars leave.  A display at the \nentrance, showing the current availability of spaces in the car park, is updated as tickets are \nissued and checked.\n The actions of issuing, paying and checking a ticket operate on the collection of objects, \nTICKETS, that is organized as a linked list.  Each object holds the following information:\n Nr:\tticket\tnumber\t(a\tprogressive\tunique\tidentifier)\n Date: date of issue\n \nArrival: time of issue (in 24-hour format)\n PaidOn: date of payment  \n \nPaidAt: time of payment (in 24-hour format).\n (a) Describe how a linked list is a suitable data structure for the given scenario. [2]\n When a car arrives and the car park is not full, a ticket is issued, the entrance barrier is \nraised and the display is updated. \n Payment of a ticket at a machine updates both the ticket and its object representation held in \nthe linked list.  The car must exit the car park within 10 minutes.\n At the exit barrier the ticket is checked, and this makes the barrier rise and updates the display.\n (b) For the given scenario, identify: \n                  (i)         one example of two processes that could occur concurrently [1]\n                  (ii)         one example of two processes that could not occur concurrently. [1]\n (c) State the condition that needs to be checked on the ticket when a car leaves the car park. [1]\n A car arrives at the entrance barrier while another car is at the exit barrier.\n (d) Explain the order in which the operations for raising the barriers and updating the \ndisplay\tshould\tbe\tperformed,\tto\tensure\ta\tcorrect\tand\tefficient\tmanagement\tof\tthe\t \ncar park. [3]\n Upon payment, the \nPaidOn and PaidAt\tfields\tare\tpopulated\tin\tthe\tcorresponding\tobject,\t\nwithout removing it from the linked list.\n     (e)     Outline     one\timplication\tof\tthis\tchoice\tof\tdesign\tin\tterms\tof\tefficiency.\t[2]\n(This question continues on the following page)\nM16/4/COMSC/HP1/ENG/TZ0/XX\n\n– 5 –\nTurn over\n(Question 13 continued)\n The car park rules enforce a short-stay policy.  Staying in the car park for up to 2 hours is \nallowed, and is subject to two possible fees.  Staying in the car park for durations longer than \ntwo hours is subject to three possible fines, in addition to the original fee, up to a maximum \nprice for each day.  Tickets are paid in Euros (EUR).\n\tThe\tpossible\tfees\tand\tfines\tare\tstored\tin\ta\ttwo-dimensional\t(2D)\tarray,\t\nRULES.\nUp to 30 \nminutes\nUp to 2  \nhours\nMaximum  \ndaily price\nRULES\n↓↓↓\n[0][1][2]\nFees\n→\n[0]0.50 EUR\n 3.00 EUR\n-------\nFines\n→\n[1]5.00 EUR\n 15.00 EUR\n30.00 EUR\n For example:\n�   staying in the car park for 40 minutes costs 3.00 EUR\n�   staying in the car park for 3 hours costs 3.00 + 15.00 = 18.00 EUR\n�   any stay in the car park that exceeds 4 hours costs 30.00 EUR\n�   a stay that spans two consecutive days, regardless of duration, costs 60.00 EUR. \n (f) Construct the steps of an algorithm that calculates the amount that a ticket is to be \ncharged.                                                                                                                                  [5]\nM16/4/COMSC/HP1/ENG/TZ0/XX\n\n– 6 –","root":"M16TZ0P1HL","difficulty":"hard"}