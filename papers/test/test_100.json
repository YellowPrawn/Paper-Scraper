{"classification":"topic 4","question":"\n\n A new higher level programming language is being developed.\n(a)     Identify     two reasons why consistent grammar and syntax should be essential features \nof a higher level programming language. [2]\n(b)     Identify     two features of a user interface that will allow application programmers to \ninteract more easily with the programming language.   [2]\n(c)     State     one method of providing user documentation.   [1]\nApplication programmers who use this programming language will be able to choose to use \neither an interpreter or a compiler.\n(d) (i) Outline the need for an interpreter or a compiler. [2]\n(ii)     Describe     one advantage to application programmers of having both an \ninterpreter and a compiler available. [2]\nOne\tof\tthe\tpredefined\tsub-programs\tin\tthe\tnew\tlanguage\tis\t\nsumOdd().  It accepts an integer  \nN as input.  If N<=0 it outputs -1,\totherwise\tit\toutputs\tthe\tsum\tof\tthe\tfirst\tN odd numbers.  \nFor example:\nsumOdd(4) outputs 16, because 4 is not less than 0, and 1 + 3 +\t5\t+ 7 = 16.\nsumOdd(−3) outputs −1, because −3 is less than 0.\n(e) Construct, in pseudocode, the algorithm for sumOdd().                                                         [4]\n(f)\tOutline\tthe\tneed\tfor\tpredefined\tsub-programs\tand\tcollections.\t[2]","root":"N16TZ0P1HL","difficulty":"medium"}